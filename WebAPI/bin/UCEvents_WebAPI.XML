<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UCEvents_WebAPI</name>
    </assembly>
    <members>
        <member name="T:UCEvents_WebAPI.App_Start.IncludeParameterNamesInOperationIdFilter">
             <summary>
             This is for the swagger documentation
             </summary>
            </member>
        <member name="T:UCEvents_WebAPI.Startup">
             <summary>
             Class for start up
             </summary>
            </member>
        <member name="M:UCEvents_WebAPI.Startup.ConfigureDatabase(Owin.IAppBuilder)">
             <summary>
             Configures seeding data into the database and creating default and check constraints in the database.
             Also handles initial creation of the database if it doesn't exist, and updating an older version of the database schema.
             </summary>
             <param name="app">The app.</param>
            </member>
        <member name="M:UCEvents_WebAPI.Startup.ConfigureSwagger(System.Web.Http.HttpConfiguration)">
             <summary>
             Configures Swagger for API Docs using swashbuckle
             </summary>
             <param name="config"></param>
            </member>
        <member name="T:UCEvents_WebAPI.Controllers.RolesController">
             <summary>
             Roles Management
             </summary>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.RolesController.GetRole(System.String)">
             <summary>
             Get the role using Role ID
             </summary>
             <param name="Id">Role ID</param>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.RolesController.GetAllRoles">
             <summary>
             Get all the defined roles
             </summary>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.RolesController.Create(UCEvents_WebAPI.Models.CreateRoleBindingModel)">
             <summary>
             Create a new role
             </summary>
             <param name="model">Define the role</param>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.RolesController.DeleteRole(System.String)">
             <summary>
             Delete a role
             </summary>
             <param name="Id">Role ID to be deleted</param>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.RolesController.ManageUsersInRole(UCEvents_WebAPI.Models.UsersInRoleModel)">
             <summary>
             Manage users in a role
             </summary>
             <param name="model"></param>
             <returns></returns>
            </member>
        <member name="T:UCEvents_WebAPI.Controllers.UsersController">
             <summary>
             User Management
             </summary>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.UsersController.GetUsers">
             <summary>
             Returns all the users
             </summary>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.UsersController.GetUser(System.String)">
             <summary>
             Get the user by UserID
             </summary>
             <param name="Id">UserID</param>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.UsersController.GetUserByName(System.String)">
             <summary>
             Get the user by username
             </summary>
             <param name="username">Valid username for user</param>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.UsersController.CreateUser(UCEvents_WebAPI.Models.CreateUserBindingModel)">
             <summary>
             Creates a new user
             </summary>
             <param name="createUserModel">New User Information</param>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.UsersController.ChangePassword(UCEvents_WebAPI.Models.ChangePasswordBindingModel)">
             <summary>
             Change the user password
             </summary>
             <param name="changePasswordModel">Old and new password information</param>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.UsersController.DeleteUser(System.String)">
             <summary>
             Deletes the user
             </summary>
             <param name="id">UserID for the user</param>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Controllers.UsersController.AssignRolesToUser(System.String,System.String[])">
             <summary>
             Assigns the specified roles to the user, and removes the rest
             </summary>
             <param name="id">UserID for the User</param>
             <param name="rolesToAssign">Array of Roles for the user</param>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Models.UserModelFactory.#ctor(System.Net.Http.HttpRequestMessage,UCEvents_WebAPI.Infrastructure.ApplicationUserManager)">
             <summary>
             Helper class to create User and Roles related return models
             </summary>
             <param name="request"></param>
             <param name="appUserManager"></param>
            </member>
        <member name="M:UCEvents_WebAPI.Models.UserModelFactory.Create(UCEvents_WebAPI.Infrastructure.ApplicationUser)">
             <summary>
             Creates a UserReturnModel asynchronously
             </summary>
             <param name="appUser"></param>
             <returns></returns>
            </member>
        <member name="M:UCEvents_WebAPI.Models.UserModelFactory.Create(Microsoft.AspNet.Identity.EntityFramework.IdentityRole)">
             <summary>
             Creates the Return Model for Auth Roles
             </summary>
             <param name="appRole">Role to return</param>
             <returns>A return model for Roles</returns>
            </member>
    </members>
</doc>
